/*
  BASE
*/
@import "base/functions"; // Scss functions that I use a lot
@import "base/mixins"; // Scss Mixins that I use a lot
@import "base/animations"; // Useful Animations
@import "base/variables"; // Define the site variables
@import "base/normal"; // Level the playing field
/*
  TYPOGRAPHY
*/
@import "typography/base"; // Define the basic typeface styles for use throughout the site
@import "typography/typography"; // Elaborate on the basic typefaces for use in specific areas
@import "typography/links"; // Styling for <a> tags
/*
  ELEMENTS
*/
@import "elements/buttons"; // Button styles
@import "elements/forms"; // Form styles

.hero {
    width: 100%;
    height: 100vh;
}

section.hero {
    background-image: url(http://placekitten.com/g/1920/1080);
    background-size: cover;
    background-position: center center;
    display: table;
}

.inner {
    display: table-row;
    background: radial-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.05));
}

.content {
    display: table-cell;
    vertical-align: middle;
    padding: 8vh 8vw;
    text-align: center;
    color: #fff;
    background-image: url("http://www.mypawnee.com/gallery/VisualAssets/BGThemes/Pattern-Crosshatch.png");

    p {
        display: block;
        padding: 2rem 0 4rem;
    }

    img:hover {
        animation: pulse 1 $speed-std;
    }

    button {
        animation: insistant 1 $speed-slowest;
        animation-delay: 1000ms;
    }
}

.round {
    border-radius: 50%;
    width: 200px;
    height: 200px;
}
$small: 400px;
$large: 1000px;

html {
    /* The base (smallest) value. */
    font-size: $font_size-med;
    /* In $small it should be 20px and in $large it should be 100px,  */
    /* In viewports between that its padding should be calculated */
    @media (min-width: $small) {
        font-size: between($font_size-med, $font_size-std, $small, $large);
    }
    /* In $large we cap the value at 100px */
    @media (min-width: $large) {
        font-size: $font_size-std;
    }
}

body {
  font-size: 1rem;
}

.Container {
    /* The base (smallest) value. */
    padding: 20px;
    /* In $small it should be 20px and in $large it should be 100px,  */
    /* In viewports between that its padding should be calculated */
    @media (min-width: $small) {
        padding: between(20px, 100px, $small, $large);
    }
    /* In $large we cap the value at 100px */
    @media (min-width: $large) {
        padding: 100px;
    }
}
